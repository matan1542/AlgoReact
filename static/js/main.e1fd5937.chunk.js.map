{"version":3,"sources":["components/FilePreview.tsx","components/DynamicCmp.tsx","components/FilesList.tsx","services/api.service.ts","services/async-storage.service.ts","services/file.service.ts","store/actions/file.actions.ts","components/Modal.tsx","components/DynamicRender.tsx","store/hooks.ts","pages/File.tsx","components/Header.tsx","components/resize.tsx","store/reducers/file.reducer.ts","store/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FilePreview","file","handleOpen","className","onClick","iconSrc","name","typeData","size","DynamicCmp","types","type","substring","length","pages","width","height","FilesList","files","map","idx","apiService","getFiles","a","axios","get","res","data","storageService","query","post","put","remove","entityType","delay","entities","JSON","parse","localStorage","getItem","Promise","resolve","reject","setTimeout","entityId","find","entity","_id","newEntity","_makeId","push","_save","updatedEntity","findIndex","splice","setItem","stringify","text","possible","i","charAt","Math","floor","random","fileService","loadFiles","dispatch","Error","Modal","handleClose","open","children","Dialog","onClose","DialogTitle","DialogContent","DynamicRender","src","controls","title","alt","useAppSelector","useDispatch","useSelector","File","state","fileModule","useState","isMounted","setMounted","setOpen","useToasts","addToast","removeToast","useEffect","appearance","id","prevState","Header","toggle","setToggle","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","matches","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","ReduxThunk","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1fd5937.chunk.js","sourcesContent":["import React from 'react'\r\nimport {File} from '../interfaces/File'\r\ntype previewProps = {\r\n    file:File,\r\n    handleOpen?: (file:File) => void,\r\n}\r\nexport default function FilePreview({ file,handleOpen }: previewProps) {\r\n    //  console.log(file)   \r\n    return (\r\n        <>\r\n            <div className=\"file-preview\" onClick={() => handleOpen(file)}>\r\n                <div className=\"img-container\">\r\n                    <i className={`${file.iconSrc} fa-fw`}></i>\r\n                </div>\r\n                <div className=\"details-container\">\r\n                    <div className=\"middle-container\">\r\n                        <h2>{file.name}</h2>\r\n                        <h3 className=\"file-type\">{file.typeData}</h3>\r\n                    </div>\r\n                    <div className=\"file-size\">\r\n                        <h3>{`${file.size}KB`}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n           </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { File } from '../interfaces/File'\r\nimport FilePreview from './FilePreview'\r\n//Switch case by type of the file\r\ntype cmpProps ={\r\n    file:File,\r\n    handleOpen:()=>void\r\n}\r\n\r\nexport default function DynamicCmp({ file,handleOpen }: cmpProps) {\r\n    const types = {\r\n        MP4: \"mp4\",\r\n        JPG: \"jpg\",\r\n        PDF: \"pdf\",\r\n    }\r\n    const type = file.name.substring(file.name.length - 3, file.name.length)\r\n    switch (type) {\r\n        case types.MP4:\r\n            file = {\r\n                ...file,\r\n                type,\r\n                size: file.size,\r\n                iconSrc:'fas fa-video',\r\n                typeData: `${file.length} seconds`\r\n            }\r\n            break;\r\n        case types.PDF:\r\n            file = {\r\n                ...file,\r\n                type,\r\n                iconSrc:'fas fa-file-pdf',\r\n                typeData: `${file.pages} pages`\r\n\r\n            }\r\n            break;\r\n        case types.JPG: file = {\r\n            ...file,\r\n            type,\r\n            iconSrc:'fas fa-image',\r\n            typeData: `${file.width}X${file.height}px`\r\n        }\r\n        break;\r\n    }\r\n  return <FilePreview file={file} handleOpen={handleOpen}/>\r\n\r\n}\r\n","import React from 'react'\r\nimport { File } from '../interfaces/File'\r\nimport DynamicCmp from './DynamicCmp'\r\ntype FileProps = {\r\n    files: File[],\r\n    handleOpen: (file?:File) => void,\r\n  }\r\n\r\nexport default function FilesList({files,handleOpen}:FileProps) {\r\n    return (\r\n        <div className=\"files-list\">\r\n          {files.map((file,idx) => {\r\n              return <DynamicCmp key={idx} handleOpen={handleOpen} file={file}/>\r\n          })}  \r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nexport const apiService = {\r\n    getFiles\r\n}\r\nasync function getFiles(): Promise<object[]> {\r\n    const res = await axios.get('https://mighty-sierra-05836.herokuapp.com/files')\r\n    return res.data.files\r\n}","\r\nexport const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n}\r\n\r\nfunction query(entityType, delay = 0) {\r\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve(entities)\r\n        }, delay)\r\n    })\r\n}\r\n\r\n\r\nasync function get(entityType, entityId) {\r\n    const entities: any = await query(entityType)\r\n    return entities.find(entity => entity._id === entityId)\r\n}\r\n\r\nasync function post(entityType, newEntity) {\r\n    newEntity._id = _makeId()\r\n    const entities: any = await query(entityType)\r\n    if (!entities?.length) {\r\n        entities.push(newEntity)\r\n        _save(entityType, entities)\r\n    }\r\n    return newEntity\r\n}\r\n\r\n\r\n\r\nasync function put(entityType, updatedEntity) {\r\n    const entities: any = await query(entityType)\r\n    const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\r\n    entities.splice(idx, 1, updatedEntity)\r\n    _save(entityType, entities)\r\n    return updatedEntity\r\n\r\n}\r\n\r\nasync function remove(entityType, entityId) {\r\n    const entities: any = await query(entityType)\r\n    const idx = entities.findIndex(entity => entity._id === entityId)\r\n    entities.splice(idx, 1)\r\n    _save(entityType, entities)\r\n}\r\n\r\n\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length = 5) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}","import { apiService } from './api.service'\r\nimport {storageService} from './async-storage.service'\r\nconst entityType = 'files'\r\nexport const fileService = {\r\n    query\r\n}\r\nasync function query() {\r\n    const files:any = await storageService.query(entityType)\r\n    if(files?.length) return files[0]\r\n    const res = await apiService.getFiles()\r\n    storageService.post(entityType, res)\r\n    return res\r\n}","import {fileService} from '../../services/file.service'\r\nexport function loadFiles() { // Action Creator\r\n    return async dispatch => {\r\n        try {\r\n            const files = await fileService.query()\r\n            const action = {\r\n                type: 'SET_FILES',\r\n                files\r\n            }\r\n            dispatch(action);\r\n            return files\r\n        } catch (err) {\r\n            //@ts-ignore \r\n            throw new Error('Couldn\\' load the files  :', err)\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { DialogTitle } from '@material-ui/core';\r\ntype DialogProp = {\r\n    handleClose: () => void,\r\n    open: boolean,\r\n    file: any\r\n}\r\nexport const Modal: React.FC<DialogProp> = ({ handleClose, open, children, file }) => {\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogTitle className=\"dialog-title\">\r\n                    <div className=\"modal-header\">\r\n                        <h2>{file.name}</h2>\r\n                        <i className=\"far fa-window-close\" onClick={handleClose}></i>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"modal-image-container\">\r\n                        {children}\r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import { Modal } from './Modal'\r\nimport React from 'react'\r\ntype propsTypes = {\r\n    type: string,\r\n    handleClose: () => void,\r\n    open: boolean,\r\n    file: any\r\n}\r\nexport default function DynamicRender({ type, handleClose, open, file }: propsTypes): any {\r\n    const types = {\r\n        MP4: \"mp4\",\r\n        JPG: \"jpg\",\r\n        PDF: \"pdf\",\r\n    }\r\n    switch (type) {\r\n        case types.MP4:\r\n            return (\r\n                <Modal handleClose={handleClose} open={open} file={file}>\r\n                        <video src={`https://mighty-sierra-05836.herokuapp.com/${file.name}`} controls></video>\r\n                </Modal>)\r\n        case types.PDF:\r\n            return (\r\n                <Modal handleClose={handleClose} open={open} file={file}>\r\n                        <iframe src={`https://mighty-sierra-05836.herokuapp.com/${file.name}`} width=\"100%\" title={file.name}></iframe>\r\n                </Modal>)\r\n        case types.JPG:\r\n            return (\r\n                <Modal handleClose={handleClose} open={open} file={file}>\r\n                        <img src={`https://mighty-sierra-05836.herokuapp.com/${file.name}`} alt=\"\" />\r\n                </Modal>)\r\n\r\n    }\r\n\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\"\r\nimport type{ AppDispatch, RootState } from \"./store\"\r\n\r\nexport const useAppDispatch:AppDispatch =  useDispatch\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import React, { useEffect, useState } from 'react';\r\nimport FilesList from '../components/FilesList'\r\nimport { loadFiles } from '../store/actions/file.actions'\r\nimport DynamicRender from '../components/DynamicRender';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useAppSelector } from '../store/hooks';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { File as FileInterface  } from '../interfaces/File';\r\n\r\nexport default function File() {\r\n\r\n    const { files } = useAppSelector((state) => {\r\n        return state.fileModule\r\n    })\r\n    const dispatch = useDispatch()\r\n    const [isMounted, setMounted] = useState(false)\r\n    const [open, setOpen] = useState({ file: null, open: false });\r\n    const { addToast, removeToast } = useToasts();\r\n    useEffect(() => {\r\n        if (!isMounted) {\r\n            query()\r\n            setMounted(true)\r\n        }\r\n        async function query() {\r\n            try {\r\n                await dispatch(loadFiles())\r\n                addToast('load succsess', { appearance: 'success', id: 'loading-success' })\r\n               setTimeout(() =>{\r\n                   removeToast('loading-success')\r\n               },2000)\r\n            }\r\n            catch (err) {\r\n                addToast(err, { appearance: 'error', id: 'loading-error' })\r\n                setTimeout(() => {\r\n                    removeToast('loading-error')\r\n\r\n                }, 2000)\r\n            }\r\n            await dispatch(loadFiles())\r\n        }\r\n    })\r\n    const handleClose = () => {\r\n        setOpen((prevState) => ({\r\n            ...prevState,\r\n            open: false\r\n        }));\r\n    };\r\n    const handleOpen = (file:FileInterface) => {\r\n        setOpen((prevState) => ({\r\n            ...prevState,\r\n            open: true,\r\n            file\r\n        }));\r\n    }\r\n    if (!files) return <div>loading...</div>\r\n    return (\r\n        <div className=\"file-page\">\r\n            {(open.file && open.open) && <DynamicRender type={open.file.type} file={open.file} handleClose={handleClose} open={open.open} />}\r\n            <FilesList files={files} handleOpen={handleOpen} />\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport useWindowSize from \"./resize\";\r\n\r\n\r\n\r\nexport function Header() {\r\nconst [toggle,setToggle] = useState(false);\r\nconst [width, height] = useWindowSize();\r\nlet matches =(width<800)?false:true;\r\nuseEffect(() =>{\r\nif(matches && toggle){\r\n  setToggle(false)\r\n}\r\n},[matches])\r\nconst toggleMenu = ()=>{\r\n  setToggle(!toggle);\r\n}\r\n  return (\r\n  <div className=\"header\">\r\n      <div className=\"navbar-header \">\r\n          <h1 className=\"logo\">myTeam</h1>\r\n          {((matches && !toggle )||( toggle && !matches) || matches)&&\r\n          <div className={`navbar-list-href flex `}>\r\n          <div className=\"left-side flex\">\r\n          <ul className=\"nav-list clean-list flex\">\r\n            <li>home</li>\r\n            <li>about</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"nav-right-side\">\r\n          <button className=\"contact-btn\">Contact us</button>\r\n        </div>\r\n          </div>}\r\n          {!matches && <button onClick={toggleMenu} className=\"btn btn-open-menu\"><i className=\"fas fa-bars\"></i></button>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useLayoutEffect, useState } from \"react\";\r\n\r\nexport default function useWindowSize() {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useLayoutEffect(() => {\r\n      function updateSize() {\r\n        setSize([window.innerWidth, window.innerHeight]);\r\n      }\r\n      window.addEventListener('resize', updateSize);\r\n      updateSize();\r\n      return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n    return size;\r\n  }","// import {waps} from '../../wap.json'\r\n// import {wapService} from '../../services/wap.service'\r\nconst initialState = {\r\n    files: null\r\n};\r\nexport function fileReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_FILES':\r\n            return { ...state, files: action.files }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","\r\nimport { Dispatch } from 'react';\r\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport ReduxThunk from 'redux-thunk';\r\nimport { fileReducer } from './reducers/file.reducer'\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    fileModule: fileReducer\r\n})\r\n\r\n\r\nexport const store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(ReduxThunk))) //Passing the reducer\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch  = Dispatch<(dispatch: any) => Promise<object[]>>\r\n\r\n","import './style/style.scss';\nimport File from './pages/File'\nimport { Header } from './components/Header';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { ToastProvider } from 'react-toast-notifications';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <ToastProvider>\n          <Header />\n          <main>\n            <File />\n          </main>\n        </ToastProvider >\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}