{"version":3,"sources":["components/FilePreview.tsx","services/enum.ts","components/DynamicCmp.tsx","components/FilesList.tsx","services/api.service.ts","components/Modal.tsx","components/DynamicRender.tsx","components/Header.tsx","components/resize.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FilePreview","file","handleOpen","className","onClick","iconSrc","name","typeData","size","types","DynamicCmp","type","substring","length","pages","width","height","FilesList","files","map","idx","apiService","getFiles","a","axios","get","res","data","Modal","handleClose","open","children","Dialog","onClose","DialogTitle","DialogContent","DynamicRender","src","controls","title","alt","Header","useState","toggle","setToggle","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","matches","useEffect","App","inital","setFiles","isMounted","setMounted","setOpen","query","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82b1a78c.chunk.js","sourcesContent":["import React from 'react'\r\ntype previewProps = {\r\n    file:any,\r\n    handleOpen?: (file:object) => void,\r\n}\r\nexport default function FilePreview({ file,handleOpen }: previewProps) {\r\n    //  console.log(file)   \r\n    return (\r\n        <>\r\n            <div className=\"file-preview\" onClick={() => handleOpen(file)}>\r\n                <div className=\"img-container\">\r\n                    <i className={`${file.iconSrc} fa-fw`}></i>\r\n                </div>\r\n                <div className=\"details-container\">\r\n                    <div className=\"middle-container\">\r\n                        <h2>{file.name}</h2>\r\n                        <h3 className=\"file-type\">{file.typeData}</h3>\r\n                    </div>\r\n                    <div className=\"file-size\">\r\n                        <h3>{`${file.size}KB`}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n           </>\r\n    )\r\n}\r\n","export const types = {\r\n    MP4: \"mp4\",\r\n    JPG: \"jpg\",\r\n    PDF: \"pdf\",\r\n}","import React from 'react'\r\nimport FilePreview from './FilePreview'\r\nimport {types} from '../services/enum'\r\n//Switch case by type of the file\r\n\r\nexport default function DynamicCmp({ file,handleOpen }: any):any {\r\n   \r\n    const type = file.name.substring(file.name.length - 3, file.name.length)\r\n    switch (type) {\r\n        case types.MP4:\r\n            file = {\r\n                ...file,\r\n                type,\r\n                size: file.size,\r\n                iconSrc:'fas fa-video',\r\n                typeData: `${file.length} seconds`\r\n            }\r\n            break;\r\n        case types.PDF:\r\n            file = {\r\n                ...file,\r\n                type,\r\n                iconSrc:'fas fa-file-pdf',\r\n                typeData: `${file.pages} pages`\r\n\r\n            }\r\n            break;\r\n        case types.JPG: file = {\r\n            ...file,\r\n            type,\r\n            iconSrc:'fas fa-image',\r\n            typeData: `${file.width}X${file.height}px`\r\n        }\r\n        break;\r\n    }\r\n  return <FilePreview file={file} handleOpen={handleOpen}/>\r\n\r\n}\r\n","import React from 'react'\r\nimport DynamicCmp from './DynamicCmp'\r\ntype FileProps = {\r\n    files: object[],\r\n    handleOpen: (file:object) => void,\r\n    open: boolean\r\n  }\r\n\r\nexport default function FilesList({files,handleOpen}:FileProps) {\r\n    return (\r\n        <div className=\"files-list\">\r\n          {files.map((file,idx) => {\r\n              return <DynamicCmp key={idx} handleOpen={handleOpen} file={file}/>\r\n          })}  \r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nexport const apiService = {\r\n    getFiles\r\n}\r\nasync function getFiles(): Promise<object[]> {\r\n    const res = await axios.get('https://mighty-sierra-05836.herokuapp.com/files')\r\n    return res.data.files\r\n}","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { DialogTitle } from '@material-ui/core';\r\ntype DialogProp = {\r\n    handleClose: () => void,\r\n    open: boolean,\r\n    file: any\r\n}\r\nexport const Modal: React.FC<DialogProp> = ({ handleClose, open, children, file }) => {\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogTitle className=\"dialog-title\">\r\n                    <div className=\"modal-header\">\r\n                        <h2>{file.name}</h2>\r\n                        <i className=\"far fa-window-close\" onClick={handleClose}></i>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"modal-image-container\">\r\n                        {children}\r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import { Modal } from './Modal'\r\nimport React from 'react'\r\ntype propsTypes = {\r\n    type: string,\r\n    handleClose: () => void,\r\n    open: boolean,\r\n    file: any\r\n}\r\nexport default function DynamicRender({ type, handleClose, open, file }: propsTypes): any {\r\n    const types = {\r\n        MP4: \"mp4\",\r\n        JPG: \"jpg\",\r\n        PDF: \"pdf\",\r\n    }\r\n    switch (type) {\r\n        case types.MP4:\r\n            return (\r\n                <Modal handleClose={handleClose} open={open} file={file}>\r\n                        <video src={`https://mighty-sierra-05836.herokuapp.com/${file.name}`} controls></video>\r\n                </Modal>)\r\n        case types.PDF:\r\n            return (\r\n                <Modal handleClose={handleClose} open={open} file={file}>\r\n                        <iframe src={`https://mighty-sierra-05836.herokuapp.com/${file.name}`} width=\"100%\" title={file.name}></iframe>\r\n                </Modal>)\r\n        case types.JPG:\r\n            return (\r\n                <Modal handleClose={handleClose} open={open} file={file}>\r\n                        <img src={`https://mighty-sierra-05836.herokuapp.com/${file.name}`} alt=\"\" />\r\n                </Modal>)\r\n\r\n    }\r\n\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport useWindowSize from \"./resize\";\r\n\r\n\r\n\r\nexport function Header() {\r\nconst [toggle,setToggle] = useState(false);\r\nconst [width, height] = useWindowSize();\r\nlet matches =(width<800)?false:true;\r\nuseEffect(() =>{\r\nif(matches && toggle){\r\n  setToggle(false)\r\n}\r\n},[matches])\r\nconst toggleMenu = ()=>{\r\n  setToggle(!toggle);\r\n}\r\n  return (\r\n  <div className=\"header\">\r\n      <div className=\"navbar-header \">\r\n          <h1 className=\"logo\">myTeam</h1>\r\n          {((matches && !toggle )||( toggle && !matches) || matches)&&\r\n          <div className={`navbar-list-href flex `}>\r\n          <div className=\"left-side flex\">\r\n          <ul className=\"nav-list clean-list flex\">\r\n            <li>home</li>\r\n            <li>about</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"nav-right-side\">\r\n          <button className=\"contact-btn\">Contact us</button>\r\n        </div>\r\n          </div>}\r\n          {!matches && <button onClick={toggleMenu} className=\"btn btn-open-menu\"><i className=\"fas fa-bars\"></i></button>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useLayoutEffect, useState } from \"react\";\r\n\r\nexport default function useWindowSize() {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useLayoutEffect(() => {\r\n      function updateSize() {\r\n        setSize([window.innerWidth, window.innerHeight]);\r\n      }\r\n      window.addEventListener('resize', updateSize);\r\n      updateSize();\r\n      return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n    return size;\r\n  }","import React, { useEffect, useState } from 'react';\nimport './style/style.scss';\nimport FilesList from './components/FilesList'\nimport { apiService } from './services/api.service'\nimport DynamicRender from './components/DynamicRender'\nimport { Header } from './components/Header';\nlet inital: object[]\nfunction App() {\n  const [files, setFiles] = useState(inital)\n  const [isMounted, setMounted] = useState(false)\n  const [open, setOpen] = useState({ file: null, open: false });\n  useEffect(() => {\n    if (!isMounted) {\n      query()\n      setMounted(true)\n    }\n    async function query() {\n      const files: any = await apiService.getFiles()\n      setFiles(files)\n    }\n  })\n  const handleClose = () => {\n    setOpen((prevState) => ({\n      ...prevState,\n      open: false\n    }));\n  };\n  const handleOpen = (file) => {\n    setOpen((prevState) => ({\n      ...prevState,\n      open: true,\n      file\n    }));\n  }\n  if (!files) return <div>loading...</div>\n  return (\n\n    <div className=\"App\">\n      {(open.file && open.open) && <DynamicRender type={open.file.type} file={open.file} handleClose={handleClose} open={open.open} />}\n      <Header/>\n      <main>\n        <FilesList files={files} handleOpen={handleOpen} open={open.open} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nrequire('dotenv').config()\n\n\nReactDOM.render(\n    <App />\n ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}